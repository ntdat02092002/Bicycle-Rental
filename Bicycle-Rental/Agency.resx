<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="txt_search.IconLeft" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAADAAAAAwCAYAAABXAvmHAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAL
        EwAACxMBAJqcGAAAA/lJREFUaEPtmM9LFVEUxyX6SbWIfoirdpXbiDDaVFILFxHZI0TD3rznQ1+4CFq0
        SV30P0iBf4CobcStWIIu/BEuDLIywra1NEx9t895HeXOvFFn3sz4A94XDj7nnPl+z7n3zL13pqqCCvYh
        urvNIf25/5F7aq7mMuZlm2OGscW2jPmDGbFsxixjC1wfwl7kcuaK3ra3aG01x0koT3LzG8kGNsdMZzIm
        zSwdVrrdRTZrmkj8p29yIUxmhkIalDZ5dHSYMwi/8yYS1Sik73nKnFCZZOA45iJT/9kvAawgbcFz8IoR
        vUXs5ZYWc1JMel6uEdNFojOe+zYN31R7u7mgcvFCk1/yES5g/bTUJQ3dEVIcXAN6r4uPIuYptlpD40Gx
        bXxGPuuYr4hd17DQoOg6eGXFcvFybVIWCA2LDkhLep6RGn32xJzVkLJBe52Da8zLj/VqSDTIauMll+QR
        PqIhkZFKmaM+RRRyjqnXkPIg0wixa6mUtolj5L2QmShpJ8fMRdrNIci7CBmVKD2/ExjxG6Lh0nRMo7rD
        g9H37rD96koMaA7amtKu6goHOdvYRFghzFJZLmTPsHVp2XWu1ag7OIoHM4uIqZxWV+JAb9bWpm3T6goO
        Eh62SWSHVVfiYNS7bW3srbqCg5u+2SRyFFBX4qBV79jaPAfj6goObtw8zxdJdqH/N1A8atjajvmhrmDo
        7DTHbAIxSE+rO3GIlkvfMb/UFQyyy7oIsANVgIC+W7ZJ9rSFMua7uoKDmxZsEnbJ2+pKHD4P8Xt1BQfT
        NmSTYF3qShxo9Xi0w59MKeCFTcIozKgrcaD90aXtmGZ1BYd3S8cK0pvqTgzsN7W2LsmvptPmvLrDgZGY
        tsn4f0BdiaGkdR0zoq7wkDOIi+z/ga5O3bEDvZuiYWty7a66w0M+OjEC7ndhXjrk5UNDYoO0iSyXthb/
        T6i7fDACDTapEo/Ja6CGRIZwMTAfPDprLN3XNCQaSLjPQ14sIo6ZkJH3SV4e3tcaEh3yxYyEp7wixXbi
        NVDDQkN6Hl5X21jc5b9K+gGxasT8PuIWuD4oy66G7gi4aknQu1F6bYXBeaC3xAMpAuFJH7ENm5WXETkK
        SEH5vDklJr/1eNDD/a5NajuD6y+aD1U+HhQ/qbO1YyWfBSPYmvS8JMvvFdsnRVD8I5WPD0xvPaM5Z4uV
        Y7TfhL3awHmf694iVnmlTWlIfJCPTgg2ksQoIuu26HYmCXHfCCPuu0ltVQTxjzUkftDnNQikEX9DQeP8
        XUL0txi/F7kmnw57+b85yNlmqyJopyYN2f/wKwJbi/3BThJbzES4l/y9RkkRjvmiroMDVqp7JP5JjBba
        tW9UFVRwMFBV9Q8ecsH7oKk8DQAAAABJRU5ErkJggg==
</value>
  </data>
</root>